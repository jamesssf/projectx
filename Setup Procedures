Clone the 2018-11-13-raspbian-stretch-lite.img to the SD card

put wpa_supplicant.conf in boot directory


              ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
              update_config=1
              country=US

              network={
              ssid="projectx"
              psk="eeee2020"
              scan_ssid=1
              }

              network={
              ssid="University of Washington"
              key_mgmt=NONE
              scan_ssid=1
              }
             
put a file with no extension in the boot called ssh

open windows command prompt

ssh pi@raspberrypi.local

type yes to accept connection

use default password 
    raspberry
    
sudo passwd pi
        ee2020
        ee2020
        
Installed gstreamer via sudo apt-get install gstreamer1.0-tools

sudo apt-get update && sudo apt-get upgrade

to ssh over bluetooth do the following
    sudo systemctl start hciuart
    sudo bluetoothctl
          agent on
          default-agent
          scan on
          pair --put bt address here
          trust --same as above
          
sudo rpi-update
sudo reboot
sudo apt-get install build-essential git cmake pkg-config
sudo apt-get install libjpeg-dev libtiff5-dev libjasper-dev libpng12-dev
sudo apt-get install libavcodec-dev libavformat-dev libswscale-dev libv4l-dev
sudo apt-get install libxvidcore-dev libx264-dev
sudo apt-get install libgtk2.0-dev
sudo apt-get install libatlas-base-dev gfortran
sudo apt-get install python2.7-dev python3-dev
wget -O opencv.zip https://github.com/Itseez/opencv/archive/4.0.1.zip
unzip opencv.zip
wget -O opencv_contrib.zip https://github.com/Itseez/opencv_contrib/archive/4.0.1.zip
unzip opencv_contrib.zip
wget https://bootstrap.pypa.io/get-pip.py
sudo python get-pip.py
sudo pip install virtualenv virtualenvwrapper
sudo rm -rf ~/.cache/pip
sudo nano /home/pi/.profile
      # virtualenv and virtualenvwrapper
      export WORKON_HOME=$HOME/.virtualenvs
      source /usr/local/bin/virtualenvwrapper.sh
sudo reboot
source ~/.profile
mkvirtualenv cv -p python3

If you ever reboot your system, logout and log back in, 
or open up a new terminal, you’ll need to use the workon
command to re-access the cv  virtual environment, 
otherwise you’ll be using the system version of Python instead.
if os use : $ source ~/.profile and $ workon cv

pip install numpy
cmake -D CMAKE_BUILD_TYPE=RELEASE \
	-D CMAKE_INSTALL_PREFIX=/usr/local \
	-D INSTALL_C_EXAMPLES=ON \
	-D INSTALL_PYTHON_EXAMPLES=OFF \
	-D OPENCV_EXTRA_MODULES_PATH=~/opencv_contrib-4.0.1/modules \
	-D BUILD_EXAMPLES=ON ..
  make
  
